version: "3.2"
services:
  web:
    image: tdsp:latest
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 9090
    ports:
      - "9090:9090"
    volumes:
    - .:/app
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DEPLOYMENT: api
      COMPOSE_HTTP_TIMEOUT: 3600
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      DEBUG: "True"
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    stdin_open: true
    tty: true
    env_file: .env
    restart: always
    command: bash -c 'python3 src/tdsp/manage.py runserver 0.0.0.0:9090'
    networks:
      pgnet:

  nginx:
    build: ./nginx/
    volumes:
      - ./src:/data/src
      - ./nginx/sites-enabled:/etc/nginx/conf.d
      - ./nginx/passwd:/etc/nginx/passwd
    environment:
      COMPOSE_HTTP_TIMEOUT: 3600
    links:
      - web:web
    networks:
      pgnet:

  postgres:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      pgnet:

volumes:
  postgres_data:

networks:
  pgnet:
